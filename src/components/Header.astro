---
import Container from "./Container.astro";
import { Image } from "astro:assets";

const links = [
    {
        to: "",
        label: "About Me",
        target: "",
        class: ""
    },
    {
        to: "",
        label: "Projects",
        target: "",
        class: ""
    },
    {
        to: "",
        label: "Skills",
        target: "",
        class: ""
    },
    {
        to: "",
        label: "Contact Me",
        target: "",
        class: ""
    }
]
---

<script>
    let isToggled = false;
    const navlinks = document.querySelector("#navlinks");
    const hamburger = document.querySelector("#hamburger");
    const layer = document.querySelector("#navLayer");
    const links = [...navlinks.querySelector("ul").children];

    function toggleNavlinks() {
        if (isToggled) {
            navlinks.classList.add("!visible", "!scale-100", "!opacity-100", "!lg:translate-y-0");
            hamburger.classList.add("toggled");
            // layer.classList.add("origin-top", "scale-y-100", "backdrop-blur-lg");
        } else {
            navlinks.classList.remove("!visible", "!scale-100", "!opacity-100", "!lg:translate-y-0");
            hamburger.classList.remove("toggled");
            // layer.classList.remove("origin-top", "scale-y-100", "backdrop-blur-lg");
        }
    }
    hamburger.addEventListener("click", () => {
        isToggled = !isToggled;
        toggleNavlinks();
    });

    links.forEach((link) => {
        link.addEventListener("click", () => {
            isToggled = !isToggled;
            toggleNavlinks();
        });
    });
</script>

<header class='relative'>
    <div class="absolute inset-x-0 justify-center w-32 ml-auto rounded-lg opacity-50 bg-gradient-to-r from-app-600 via-app-200 to-app-600 h-42 lg:-top-64 lg:w-96 lg:h-96 blur-3xl"></div>
    <nav class="fixed z-10 w-full border-b border-black/5 dark:border-white/5 lg:border-transparent bg-white/[0.01] backdrop-blur-lg pt-0 select-none">
        <Container>
            <div class="relative flex flex-wrap items-center justify-between gap-6 py-3 md:gap-0 md:py-4">
                <div class="relative z-20 flex w-full justify-between md:px-0 lg:w-max">
                    <a href="/" aria-label="logo" class="flex items-center space-x-2">
                      <picture>
                        <source media="(prefers-color-scheme: dark)" srcset="/svg/dark-logo.svg">
                        <source media="(prefers-color-scheme: light)" srcset="/svg/logo-dark.svg">
                        <Image alt="Fabian Herrera Logo" src="/svg/dark-logo.svg" width="50" height="70" style="max-width: 100%;">
                      </picture>
                    </a>

                    <div class="relative flex max-h-10 items-center lg:hidden">
                        <button aria-label="humburger" id="hamburger" class="relative -mr-6 p-6 mt-4 flex justify-center flex-col">
                            <div aria-hidden="true" id="line" class="m-auto h-0.5 w-5 rounded bg-black transition duration-300 "></div>
                            <div aria-hidden="true" id="line2" class="m-auto mt-2 h-0.5 w-5 rounded bg-black transition duration-300 "></div>
                        </button>
                    </div>
                </div>
                <!-- <div id="navLayer" aria-hidden="true" class="fixed inset-0 z-10 h-screen w-screen origin-bottom scale-y-0 backdrop-blur-lg transition duration-500 dark:bg-gray-100/10 lg:hidden"></div> -->
                <div id="navlinks" class="invisible absolute top-full left-0 z-20 w-full origin-top-right translate-y-1 scale-90 flex-col flex-wrap justify-end gap-6 rounded-3xl bg-gray-300 p-8 opacity-0 shadow-2xl transition-all duration-300 dark:bg-darker dark:shadow-none lg:visible lg:relative lg:flex lg:w-3/4 lg:translate-y-0 lg:scale-100 lg:flex-row lg:items-center lg:gap-0 lg:border-none lg:bg-transparent lg:p-0 lg:opacity-100 lg:shadow-none">
                    <div class="w-full text-gray-600  lg:w-auto lg:pr-4 lg:pt-0">
                        <ul class="flex flex-col gap-6 tracking-wide lg:flex-row lg:gap-0 lg:text-base">
                            {
                                links.map((link) => (
                                    <li>
                                        <a href={link.to} class={link.class} target={link.target}>
                                            <span class='hover:text-black block transition font-GilroySemibold md:px-4 text-base'>{link.label}</span>
                                        </a>
                                    </li>
                                ))
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </Container>
    </nav>
</header>

<style>
    #toggle_nav:checked ~ div #hamburger #line {
        @apply translate-y-1.5 rotate-45;
    }

    #toggle_nav:checked ~ div #hamburger #line2 {
        @apply -translate-y-1 -rotate-45;
    }

    .toggled div:first-child {
        @apply translate-y-1.5 rotate-45;
    }
    .toggled div:last-child {
        @apply -translate-y-1 -rotate-45;
    }
</style>